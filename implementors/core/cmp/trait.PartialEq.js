(function() {var implementors = {};
implementors["embedded_hal"] = [{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_hal/can/struct.StandardId.html\" title=\"struct embedded_hal::can::StandardId\">StandardId</a>&gt; for <a class=\"struct\" href=\"embedded_hal/can/struct.StandardId.html\" title=\"struct embedded_hal::can::StandardId\">StandardId</a>","synthetic":false,"types":["embedded_hal::can::id::StandardId"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_hal/can/struct.ExtendedId.html\" title=\"struct embedded_hal::can::ExtendedId\">ExtendedId</a>&gt; for <a class=\"struct\" href=\"embedded_hal/can/struct.ExtendedId.html\" title=\"struct embedded_hal::can::ExtendedId\">ExtendedId</a>","synthetic":false,"types":["embedded_hal::can::id::ExtendedId"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/can/enum.Id.html\" title=\"enum embedded_hal::can::Id\">Id</a>&gt; for <a class=\"enum\" href=\"embedded_hal/can/enum.Id.html\" title=\"enum embedded_hal::can::Id\">Id</a>","synthetic":false,"types":["embedded_hal::can::id::Id"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/can/enum.ErrorKind.html\" title=\"enum embedded_hal::can::ErrorKind\">ErrorKind</a>&gt; for <a class=\"enum\" href=\"embedded_hal/can/enum.ErrorKind.html\" title=\"enum embedded_hal::can::ErrorKind\">ErrorKind</a>","synthetic":false,"types":["embedded_hal::can::ErrorKind"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>&gt; for <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>","synthetic":false,"types":["embedded_hal::digital::PinState"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/i2c/enum.ErrorKind.html\" title=\"enum embedded_hal::i2c::ErrorKind\">ErrorKind</a>&gt; for <a class=\"enum\" href=\"embedded_hal/i2c/enum.ErrorKind.html\" title=\"enum embedded_hal::i2c::ErrorKind\">ErrorKind</a>","synthetic":false,"types":["embedded_hal::i2c::ErrorKind"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/i2c/enum.NoAcknowledgeSource.html\" title=\"enum embedded_hal::i2c::NoAcknowledgeSource\">NoAcknowledgeSource</a>&gt; for <a class=\"enum\" href=\"embedded_hal/i2c/enum.NoAcknowledgeSource.html\" title=\"enum embedded_hal::i2c::NoAcknowledgeSource\">NoAcknowledgeSource</a>","synthetic":false,"types":["embedded_hal::i2c::NoAcknowledgeSource"]},{"text":"impl&lt;'a&gt; PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/i2c/blocking/enum.Operation.html\" title=\"enum embedded_hal::i2c::blocking::Operation\">Operation</a>&lt;'a&gt;&gt; for <a class=\"enum\" href=\"embedded_hal/i2c/blocking/enum.Operation.html\" title=\"enum embedded_hal::i2c::blocking::Operation\">Operation</a>&lt;'a&gt;","synthetic":false,"types":["embedded_hal::i2c::blocking::Operation"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/serial/enum.ErrorKind.html\" title=\"enum embedded_hal::serial::ErrorKind\">ErrorKind</a>&gt; for <a class=\"enum\" href=\"embedded_hal/serial/enum.ErrorKind.html\" title=\"enum embedded_hal::serial::ErrorKind\">ErrorKind</a>","synthetic":false,"types":["embedded_hal::serial::ErrorKind"]},{"text":"impl&lt;'a, Word:&nbsp;PartialEq + 'static + Copy&gt; PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/spi/blocking/enum.Operation.html\" title=\"enum embedded_hal::spi::blocking::Operation\">Operation</a>&lt;'a, Word&gt;&gt; for <a class=\"enum\" href=\"embedded_hal/spi/blocking/enum.Operation.html\" title=\"enum embedded_hal::spi::blocking::Operation\">Operation</a>&lt;'a, Word&gt;","synthetic":false,"types":["embedded_hal::spi::blocking::Operation"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/spi/enum.Polarity.html\" title=\"enum embedded_hal::spi::Polarity\">Polarity</a>&gt; for <a class=\"enum\" href=\"embedded_hal/spi/enum.Polarity.html\" title=\"enum embedded_hal::spi::Polarity\">Polarity</a>","synthetic":false,"types":["embedded_hal::spi::Polarity"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/spi/enum.Phase.html\" title=\"enum embedded_hal::spi::Phase\">Phase</a>&gt; for <a class=\"enum\" href=\"embedded_hal/spi/enum.Phase.html\" title=\"enum embedded_hal::spi::Phase\">Phase</a>","synthetic":false,"types":["embedded_hal::spi::Phase"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_hal/spi/struct.Mode.html\" title=\"struct embedded_hal::spi::Mode\">Mode</a>&gt; for <a class=\"struct\" href=\"embedded_hal/spi/struct.Mode.html\" title=\"struct embedded_hal::spi::Mode\">Mode</a>","synthetic":false,"types":["embedded_hal::spi::Mode"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_hal/spi/enum.ErrorKind.html\" title=\"enum embedded_hal::spi::ErrorKind\">ErrorKind</a>&gt; for <a class=\"enum\" href=\"embedded_hal/spi/enum.ErrorKind.html\" title=\"enum embedded_hal::spi::ErrorKind\">ErrorKind</a>","synthetic":false,"types":["embedded_hal::spi::ErrorKind"]}];
implementors["embedded_svc"] = [{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/eth/enum.Capability.html\" title=\"enum embedded_svc::eth::Capability\">Capability</a>&gt; for <a class=\"enum\" href=\"embedded_svc/eth/enum.Capability.html\" title=\"enum embedded_svc::eth::Capability\">Capability</a>","synthetic":false,"types":["embedded_svc::eth::Capability"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"embedded_svc/eth/enum.Capability.html\" title=\"enum embedded_svc::eth::Capability\">Capability</a>&gt;&gt; for <a class=\"enum\" href=\"embedded_svc/eth/enum.Capability.html\" title=\"enum embedded_svc::eth::Capability\">Capability</a>","synthetic":false,"types":["embedded_svc::eth::Capability"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/eth/enum.Configuration.html\" title=\"enum embedded_svc::eth::Configuration\">Configuration</a>&gt; for <a class=\"enum\" href=\"embedded_svc/eth/enum.Configuration.html\" title=\"enum embedded_svc::eth::Configuration\">Configuration</a>","synthetic":false,"types":["embedded_svc::eth::Configuration"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/eth/enum.IpStatus.html\" title=\"enum embedded_svc::eth::IpStatus\">IpStatus</a>&gt; for <a class=\"enum\" href=\"embedded_svc/eth/enum.IpStatus.html\" title=\"enum embedded_svc::eth::IpStatus\">IpStatus</a>","synthetic":false,"types":["embedded_svc::eth::IpStatus"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/eth/enum.ConnectionStatus.html\" title=\"enum embedded_svc::eth::ConnectionStatus\">ConnectionStatus</a>&gt; for <a class=\"enum\" href=\"embedded_svc/eth/enum.ConnectionStatus.html\" title=\"enum embedded_svc::eth::ConnectionStatus\">ConnectionStatus</a>","synthetic":false,"types":["embedded_svc::eth::ConnectionStatus"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/eth/enum.Status.html\" title=\"enum embedded_svc::eth::Status\">Status</a>&gt; for <a class=\"enum\" href=\"embedded_svc/eth/enum.Status.html\" title=\"enum embedded_svc::eth::Status\">Status</a>","synthetic":false,"types":["embedded_svc::eth::Status"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ipv4/struct.Mask.html\" title=\"struct embedded_svc::ipv4::Mask\">Mask</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ipv4/struct.Mask.html\" title=\"struct embedded_svc::ipv4::Mask\">Mask</a>","synthetic":false,"types":["embedded_svc::ipv4::Mask"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ipv4/struct.Subnet.html\" title=\"struct embedded_svc::ipv4::Subnet\">Subnet</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ipv4/struct.Subnet.html\" title=\"struct embedded_svc::ipv4::Subnet\">Subnet</a>","synthetic":false,"types":["embedded_svc::ipv4::Subnet"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ipv4/struct.ClientSettings.html\" title=\"struct embedded_svc::ipv4::ClientSettings\">ClientSettings</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ipv4/struct.ClientSettings.html\" title=\"struct embedded_svc::ipv4::ClientSettings\">ClientSettings</a>","synthetic":false,"types":["embedded_svc::ipv4::ClientSettings"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ipv4/struct.DHCPClientSettings.html\" title=\"struct embedded_svc::ipv4::DHCPClientSettings\">DHCPClientSettings</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ipv4/struct.DHCPClientSettings.html\" title=\"struct embedded_svc::ipv4::DHCPClientSettings\">DHCPClientSettings</a>","synthetic":false,"types":["embedded_svc::ipv4::DHCPClientSettings"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/ipv4/enum.ClientConfiguration.html\" title=\"enum embedded_svc::ipv4::ClientConfiguration\">ClientConfiguration</a>&gt; for <a class=\"enum\" href=\"embedded_svc/ipv4/enum.ClientConfiguration.html\" title=\"enum embedded_svc::ipv4::ClientConfiguration\">ClientConfiguration</a>","synthetic":false,"types":["embedded_svc::ipv4::ClientConfiguration"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ipv4/struct.RouterConfiguration.html\" title=\"struct embedded_svc::ipv4::RouterConfiguration\">RouterConfiguration</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ipv4/struct.RouterConfiguration.html\" title=\"struct embedded_svc::ipv4::RouterConfiguration\">RouterConfiguration</a>","synthetic":false,"types":["embedded_svc::ipv4::RouterConfiguration"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ping/struct.Configuration.html\" title=\"struct embedded_svc::ping::Configuration\">Configuration</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ping/struct.Configuration.html\" title=\"struct embedded_svc::ping::Configuration\">Configuration</a>","synthetic":false,"types":["embedded_svc::ping::Configuration"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ping/struct.Info.html\" title=\"struct embedded_svc::ping::Info\">Info</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ping/struct.Info.html\" title=\"struct embedded_svc::ping::Info\">Info</a>","synthetic":false,"types":["embedded_svc::ping::Info"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/ping/enum.Reply.html\" title=\"enum embedded_svc::ping::Reply\">Reply</a>&gt; for <a class=\"enum\" href=\"embedded_svc/ping/enum.Reply.html\" title=\"enum embedded_svc::ping::Reply\">Reply</a>","synthetic":false,"types":["embedded_svc::ping::Reply"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"embedded_svc/ping/struct.Summary.html\" title=\"struct embedded_svc::ping::Summary\">Summary</a>&gt; for <a class=\"struct\" href=\"embedded_svc/ping/struct.Summary.html\" title=\"struct embedded_svc::ping::Summary\">Summary</a>","synthetic":false,"types":["embedded_svc::ping::Summary"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"embedded_svc/utils/role/enum.Role.html\" title=\"enum embedded_svc::utils::role::Role\">Role</a>&gt; for <a class=\"enum\" href=\"embedded_svc/utils/role/enum.Role.html\" title=\"enum embedded_svc::utils::role::Role\">Role</a>","synthetic":false,"types":["embedded_svc::utils::role::Role"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;<a class=\"enum\" href=\"embedded_svc/utils/role/enum.Role.html\" title=\"enum embedded_svc::utils::role::Role\">Role</a>&gt;&gt; for <a class=\"enum\" href=\"embedded_svc/utils/role/enum.Role.html\" title=\"enum embedded_svc::utils::role::Role\">Role</a>","synthetic":false,"types":["embedded_svc::utils::role::Role"]}];
implementors["enumset"] = [{"text":"impl&lt;T:&nbsp;PartialEq + <a class=\"trait\" href=\"enumset/trait.EnumSetType.html\" title=\"trait enumset::EnumSetType\">EnumSetType</a>&gt; PartialEq&lt;<a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Repr: PartialEq,&nbsp;</span>","synthetic":false,"types":["enumset::EnumSet"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"enumset/trait.EnumSetType.html\" title=\"trait enumset::EnumSetType\">EnumSetType</a>&gt; PartialEq&lt;T&gt; for <a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;T&gt;","synthetic":false,"types":["enumset::EnumSet"]}];
implementors["esp_idf_hal"] = [{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/adc/config/enum.Resolution.html\" title=\"enum esp_idf_hal::adc::config::Resolution\">Resolution</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/adc/config/enum.Resolution.html\" title=\"enum esp_idf_hal::adc::config::Resolution\">Resolution</a>","synthetic":false,"types":["esp_idf_hal::adc::config::Resolution"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/can/struct.CanError.html\" title=\"struct esp_idf_hal::can::CanError\">CanError</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/can/struct.CanError.html\" title=\"struct esp_idf_hal::can::CanError\">CanError</a>","synthetic":false,"types":["esp_idf_hal::can::CanError"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/can/struct.Can02Error.html\" title=\"struct esp_idf_hal::can::Can02Error\">Can02Error</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/can/struct.Can02Error.html\" title=\"struct esp_idf_hal::can::Can02Error\">Can02Error</a>","synthetic":false,"types":["esp_idf_hal::can::Can02Error"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/can/config/enum.Timing.html\" title=\"enum esp_idf_hal::can::config::Timing\">Timing</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/can/config/enum.Timing.html\" title=\"enum esp_idf_hal::can::config::Timing\">Timing</a>","synthetic":false,"types":["esp_idf_hal::can::config::Timing"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/can/config/enum.Filter.html\" title=\"enum esp_idf_hal::can::config::Filter\">Filter</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/can/config/enum.Filter.html\" title=\"enum esp_idf_hal::can::config::Filter\">Filter</a>","synthetic":false,"types":["esp_idf_hal::can::config::Filter"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/cpu/enum.Core.html\" title=\"enum esp_idf_hal::cpu::Core\">Core</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/cpu/enum.Core.html\" title=\"enum esp_idf_hal::cpu::Core\">Core</a>","synthetic":false,"types":["esp_idf_hal::cpu::Core"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/i2c/struct.I2cError.html\" title=\"struct esp_idf_hal::i2c::I2cError\">I2cError</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/i2c/struct.I2cError.html\" title=\"struct esp_idf_hal::i2c::I2cError\">I2cError</a>","synthetic":false,"types":["esp_idf_hal::i2c::I2cError"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/rmt/enum.PinState.html\" title=\"enum esp_idf_hal::rmt::PinState\">PinState</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/rmt/enum.PinState.html\" title=\"enum esp_idf_hal::rmt::PinState\">PinState</a>","synthetic":false,"types":["esp_idf_hal::rmt::PinState"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/rmt/struct.Pulse.html\" title=\"struct esp_idf_hal::rmt::Pulse\">Pulse</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/rmt/struct.Pulse.html\" title=\"struct esp_idf_hal::rmt::Pulse\">Pulse</a>","synthetic":false,"types":["esp_idf_hal::rmt::Pulse"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/rmt/struct.PulseTicks.html\" title=\"struct esp_idf_hal::rmt::PulseTicks\">PulseTicks</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/rmt/struct.PulseTicks.html\" title=\"struct esp_idf_hal::rmt::PulseTicks\">PulseTicks</a>","synthetic":false,"types":["esp_idf_hal::rmt::PulseTicks"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/rmt/config/struct.DutyPercent.html\" title=\"struct esp_idf_hal::rmt::config::DutyPercent\">DutyPercent</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/rmt/config/struct.DutyPercent.html\" title=\"struct esp_idf_hal::rmt::config::DutyPercent\">DutyPercent</a>","synthetic":false,"types":["esp_idf_hal::rmt::config::DutyPercent"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/rmt/config/struct.CarrierConfig.html\" title=\"struct esp_idf_hal::rmt::config::CarrierConfig\">CarrierConfig</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/rmt/config/struct.CarrierConfig.html\" title=\"struct esp_idf_hal::rmt::config::CarrierConfig\">CarrierConfig</a>","synthetic":false,"types":["esp_idf_hal::rmt::config::CarrierConfig"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/rmt/config/enum.Loop.html\" title=\"enum esp_idf_hal::rmt::config::Loop\">Loop</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/rmt/config/enum.Loop.html\" title=\"enum esp_idf_hal::rmt::config::Loop\">Loop</a>","synthetic":false,"types":["esp_idf_hal::rmt::config::Loop"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.DataBits.html\" title=\"enum esp_idf_hal::serial::config::DataBits\">DataBits</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.DataBits.html\" title=\"enum esp_idf_hal::serial::config::DataBits\">DataBits</a>","synthetic":false,"types":["esp_idf_hal::serial::config::DataBits"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.FlowControl.html\" title=\"enum esp_idf_hal::serial::config::FlowControl\">FlowControl</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.FlowControl.html\" title=\"enum esp_idf_hal::serial::config::FlowControl\">FlowControl</a>","synthetic":false,"types":["esp_idf_hal::serial::config::FlowControl"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.Parity.html\" title=\"enum esp_idf_hal::serial::config::Parity\">Parity</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.Parity.html\" title=\"enum esp_idf_hal::serial::config::Parity\">Parity</a>","synthetic":false,"types":["esp_idf_hal::serial::config::Parity"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.StopBits.html\" title=\"enum esp_idf_hal::serial::config::StopBits\">StopBits</a>&gt; for <a class=\"enum\" href=\"esp_idf_hal/serial/config/enum.StopBits.html\" title=\"enum esp_idf_hal::serial::config::StopBits\">StopBits</a>","synthetic":false,"types":["esp_idf_hal::serial::config::StopBits"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/serial/struct.SerialError.html\" title=\"struct esp_idf_hal::serial::SerialError\">SerialError</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/serial/struct.SerialError.html\" title=\"struct esp_idf_hal::serial::SerialError\">SerialError</a>","synthetic":false,"types":["esp_idf_hal::serial::SerialError"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/spi/struct.SpiError.html\" title=\"struct esp_idf_hal::spi::SpiError\">SpiError</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/spi/struct.SpiError.html\" title=\"struct esp_idf_hal::spi::SpiError\">SpiError</a>","synthetic":false,"types":["esp_idf_hal::spi::SpiError"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.Hertz.html\" title=\"struct esp_idf_hal::units::Hertz\">Hertz</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.Hertz.html\" title=\"struct esp_idf_hal::units::Hertz\">Hertz</a>","synthetic":false,"types":["esp_idf_hal::units::Hertz"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.KiloHertz.html\" title=\"struct esp_idf_hal::units::KiloHertz\">KiloHertz</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.KiloHertz.html\" title=\"struct esp_idf_hal::units::KiloHertz\">KiloHertz</a>","synthetic":false,"types":["esp_idf_hal::units::KiloHertz"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.MegaHertz.html\" title=\"struct esp_idf_hal::units::MegaHertz\">MegaHertz</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.MegaHertz.html\" title=\"struct esp_idf_hal::units::MegaHertz\">MegaHertz</a>","synthetic":false,"types":["esp_idf_hal::units::MegaHertz"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.NanoSeconds.html\" title=\"struct esp_idf_hal::units::NanoSeconds\">NanoSeconds</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.NanoSeconds.html\" title=\"struct esp_idf_hal::units::NanoSeconds\">NanoSeconds</a>","synthetic":false,"types":["esp_idf_hal::units::NanoSeconds"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.MicroSeconds.html\" title=\"struct esp_idf_hal::units::MicroSeconds\">MicroSeconds</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.MicroSeconds.html\" title=\"struct esp_idf_hal::units::MicroSeconds\">MicroSeconds</a>","synthetic":false,"types":["esp_idf_hal::units::MicroSeconds"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.MilliSeconds.html\" title=\"struct esp_idf_hal::units::MilliSeconds\">MilliSeconds</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.MilliSeconds.html\" title=\"struct esp_idf_hal::units::MilliSeconds\">MilliSeconds</a>","synthetic":false,"types":["esp_idf_hal::units::MilliSeconds"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.Seconds.html\" title=\"struct esp_idf_hal::units::Seconds\">Seconds</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.Seconds.html\" title=\"struct esp_idf_hal::units::Seconds\">Seconds</a>","synthetic":false,"types":["esp_idf_hal::units::Seconds"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.Ticks.html\" title=\"struct esp_idf_hal::units::Ticks\">Ticks</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.Ticks.html\" title=\"struct esp_idf_hal::units::Ticks\">Ticks</a>","synthetic":false,"types":["esp_idf_hal::units::Ticks"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.HertzU64.html\" title=\"struct esp_idf_hal::units::HertzU64\">HertzU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.HertzU64.html\" title=\"struct esp_idf_hal::units::HertzU64\">HertzU64</a>","synthetic":false,"types":["esp_idf_hal::units::HertzU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.KiloHertzU64.html\" title=\"struct esp_idf_hal::units::KiloHertzU64\">KiloHertzU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.KiloHertzU64.html\" title=\"struct esp_idf_hal::units::KiloHertzU64\">KiloHertzU64</a>","synthetic":false,"types":["esp_idf_hal::units::KiloHertzU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.MegaHertzU64.html\" title=\"struct esp_idf_hal::units::MegaHertzU64\">MegaHertzU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.MegaHertzU64.html\" title=\"struct esp_idf_hal::units::MegaHertzU64\">MegaHertzU64</a>","synthetic":false,"types":["esp_idf_hal::units::MegaHertzU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.NanoSecondsU64.html\" title=\"struct esp_idf_hal::units::NanoSecondsU64\">NanoSecondsU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.NanoSecondsU64.html\" title=\"struct esp_idf_hal::units::NanoSecondsU64\">NanoSecondsU64</a>","synthetic":false,"types":["esp_idf_hal::units::NanoSecondsU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.MicroSecondsU64.html\" title=\"struct esp_idf_hal::units::MicroSecondsU64\">MicroSecondsU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.MicroSecondsU64.html\" title=\"struct esp_idf_hal::units::MicroSecondsU64\">MicroSecondsU64</a>","synthetic":false,"types":["esp_idf_hal::units::MicroSecondsU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.MilliSecondsU64.html\" title=\"struct esp_idf_hal::units::MilliSecondsU64\">MilliSecondsU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.MilliSecondsU64.html\" title=\"struct esp_idf_hal::units::MilliSecondsU64\">MilliSecondsU64</a>","synthetic":false,"types":["esp_idf_hal::units::MilliSecondsU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.SecondsU64.html\" title=\"struct esp_idf_hal::units::SecondsU64\">SecondsU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.SecondsU64.html\" title=\"struct esp_idf_hal::units::SecondsU64\">SecondsU64</a>","synthetic":false,"types":["esp_idf_hal::units::SecondsU64"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_hal/units/struct.TicksU64.html\" title=\"struct esp_idf_hal::units::TicksU64\">TicksU64</a>&gt; for <a class=\"struct\" href=\"esp_idf_hal/units/struct.TicksU64.html\" title=\"struct esp_idf_hal::units::TicksU64\">TicksU64</a>","synthetic":false,"types":["esp_idf_hal::units::TicksU64"]}];
implementors["esp_idf_sys"] = [{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"esp_idf_sys/struct.EspError.html\" title=\"struct esp_idf_sys::EspError\">EspError</a>&gt; for <a class=\"struct\" href=\"esp_idf_sys/struct.EspError.html\" title=\"struct esp_idf_sys::EspError\">EspError</a>","synthetic":false,"types":["esp_idf_sys::error::EspError"]},{"text":"impl&lt;Storage:&nbsp;PartialEq&gt; PartialEq&lt;<a class=\"struct\" href=\"esp_idf_sys/struct.__BindgenBitfieldUnit.html\" title=\"struct esp_idf_sys::__BindgenBitfieldUnit\">__BindgenBitfieldUnit</a>&lt;Storage&gt;&gt; for <a class=\"struct\" href=\"esp_idf_sys/struct.__BindgenBitfieldUnit.html\" title=\"struct esp_idf_sys::__BindgenBitfieldUnit\">__BindgenBitfieldUnit</a>&lt;Storage&gt;","synthetic":false,"types":["esp_idf_sys::bindings::__BindgenBitfieldUnit"]}];
implementors["log"] = [{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>&gt; for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":false,"types":["log::Level"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>&gt; for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":false,"types":["log::Level"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>&gt; for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":false,"types":["log::LevelFilter"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>&gt; for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":false,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; PartialEq&lt;<a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":false,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; PartialEq&lt;<a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":false,"types":["log::MetadataBuilder"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>&gt; for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":false,"types":["log::ParseLevelError"]}];
implementors["nb"] = [{"text":"impl&lt;E:&nbsp;PartialEq&gt; PartialEq&lt;<a class=\"enum\" href=\"nb/enum.Error.html\" title=\"enum nb::Error\">Error</a>&lt;E&gt;&gt; for <a class=\"enum\" href=\"nb/enum.Error.html\" title=\"enum nb::Error\">Error</a>&lt;E&gt;","synthetic":false,"types":["nb::Error"]}];
implementors["no_std_net"] = [{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"no_std_net/enum.SocketAddr.html\" title=\"enum no_std_net::SocketAddr\">SocketAddr</a>&gt; for <a class=\"enum\" href=\"no_std_net/enum.SocketAddr.html\" title=\"enum no_std_net::SocketAddr\">SocketAddr</a>","synthetic":false,"types":["no_std_net::addr::SocketAddr"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"no_std_net/struct.SocketAddrV4.html\" title=\"struct no_std_net::SocketAddrV4\">SocketAddrV4</a>&gt; for <a class=\"struct\" href=\"no_std_net/struct.SocketAddrV4.html\" title=\"struct no_std_net::SocketAddrV4\">SocketAddrV4</a>","synthetic":false,"types":["no_std_net::addr::SocketAddrV4"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"no_std_net/struct.SocketAddrV6.html\" title=\"struct no_std_net::SocketAddrV6\">SocketAddrV6</a>&gt; for <a class=\"struct\" href=\"no_std_net/struct.SocketAddrV6.html\" title=\"struct no_std_net::SocketAddrV6\">SocketAddrV6</a>","synthetic":false,"types":["no_std_net::addr::SocketAddrV6"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"no_std_net/enum.IpAddr.html\" title=\"enum no_std_net::IpAddr\">IpAddr</a>&gt; for <a class=\"enum\" href=\"no_std_net/enum.IpAddr.html\" title=\"enum no_std_net::IpAddr\">IpAddr</a>","synthetic":false,"types":["no_std_net::ip::IpAddr"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"no_std_net/struct.Ipv4Addr.html\" title=\"struct no_std_net::Ipv4Addr\">Ipv4Addr</a>&gt; for <a class=\"struct\" href=\"no_std_net/struct.Ipv4Addr.html\" title=\"struct no_std_net::Ipv4Addr\">Ipv4Addr</a>","synthetic":false,"types":["no_std_net::ip::Ipv4Addr"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"no_std_net/struct.Ipv6Addr.html\" title=\"struct no_std_net::Ipv6Addr\">Ipv6Addr</a>&gt; for <a class=\"struct\" href=\"no_std_net/struct.Ipv6Addr.html\" title=\"struct no_std_net::Ipv6Addr\">Ipv6Addr</a>","synthetic":false,"types":["no_std_net::ip::Ipv6Addr"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"no_std_net/enum.Ipv6MulticastScope.html\" title=\"enum no_std_net::Ipv6MulticastScope\">Ipv6MulticastScope</a>&gt; for <a class=\"enum\" href=\"no_std_net/enum.Ipv6MulticastScope.html\" title=\"enum no_std_net::Ipv6MulticastScope\">Ipv6MulticastScope</a>","synthetic":false,"types":["no_std_net::ip::Ipv6MulticastScope"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"no_std_net/struct.Ipv4Addr.html\" title=\"struct no_std_net::Ipv4Addr\">Ipv4Addr</a>&gt; for <a class=\"enum\" href=\"no_std_net/enum.IpAddr.html\" title=\"enum no_std_net::IpAddr\">IpAddr</a>","synthetic":false,"types":["no_std_net::ip::IpAddr"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"no_std_net/enum.IpAddr.html\" title=\"enum no_std_net::IpAddr\">IpAddr</a>&gt; for <a class=\"struct\" href=\"no_std_net/struct.Ipv4Addr.html\" title=\"struct no_std_net::Ipv4Addr\">Ipv4Addr</a>","synthetic":false,"types":["no_std_net::ip::Ipv4Addr"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"no_std_net/enum.IpAddr.html\" title=\"enum no_std_net::IpAddr\">IpAddr</a>&gt; for <a class=\"struct\" href=\"no_std_net/struct.Ipv6Addr.html\" title=\"struct no_std_net::Ipv6Addr\">Ipv6Addr</a>","synthetic":false,"types":["no_std_net::ip::Ipv6Addr"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"no_std_net/struct.Ipv6Addr.html\" title=\"struct no_std_net::Ipv6Addr\">Ipv6Addr</a>&gt; for <a class=\"enum\" href=\"no_std_net/enum.IpAddr.html\" title=\"enum no_std_net::IpAddr\">IpAddr</a>","synthetic":false,"types":["no_std_net::ip::IpAddr"]}];
implementors["serde"] = [{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>&gt; for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":false,"types":["serde::de::value::Error"]},{"text":"impl&lt;'a&gt; PartialEq&lt;<a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;&gt; for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":false,"types":["serde::de::Unexpected"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()